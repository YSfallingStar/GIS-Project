{"mappings":"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","sources":["src/js/measure.js"],"sourcesContent":["// 거리, 속력, 시간 표시\r\n// math.ceil() -> 올림 정수 반환 / Math.floor() -> 내림 정수 반환 / Math.round() -> 반올림 정수 반환\r\nlet formatLength = function (line) {\r\n  let length = ol.sphere.getLength(line);\r\n  var velocity = document.getElementById(\"velocityValue\");\r\n  var value_velocity = Number(velocity.value);\r\n  var Distance\t= Math.round((length / 1000) * 100) / 100;\r\n  var Time = (Distance * 1000 * 3.6) / (value_velocity * 1);\r\n  var H = Math.floor(Time / 3600);\r\n  var M = Math.floor((Time - (parseInt(Time / 3600)*3600)) / 60);\r\n  var S = Math.round(Time - (parseInt((Time - (parseInt(Time / 3600)*3600)) / 60)*60) - (parseInt(Time / 3600)*3600), 2);\r\n  let output;\r\n\r\n  if (length > 100) {\r\n    output = Distance + ' km / ' + value_velocity + ' km/h / ' + H + ' h ' + M + ' m ' + S + ' s ';\r\n  } else {\r\n    output = Math.round(length * 100) / 100 + ' m' + value_velocity + ' m/s / ' + Math.round(((length / 1000) * 100) / 100) / value_velocity + ' s';\r\n  }\r\n  map.render();\r\n  return output;\r\n};\r\n\r\nlet formatArea = function (polygon) {\r\n  let area = ol.sphere.getArea(polygon);\r\n  let output;\r\n  if (area > 10000) {\r\n    output = Math.round((area / 1000000) * 100) / 100 + ' km\\xB2';\r\n  } else {\r\n    output = Math.round(area * 100) / 100 + ' m\\xB2';\r\n  }\r\n  return output;\r\n};\r\n\r\nfunction styleFunction(feature, segments, drawType, tip) {\r\n  let styles = [style];\r\n  let geometry = feature.getGeometry();\r\n  let type = geometry.getType();\r\n  let point, label, line;\r\n  if (!drawType || drawType === type) {\r\n    if (type === 'Polygon') {\r\n      point = geometry.getInteriorPoint();\r\n      label = formatArea(geometry);\r\n      line = new ol.geom.LineString(geometry.getCoordinates()[0]);\r\n    } else if (type === 'LineString') {\r\n      point = new ol.geom.Point(geometry.getLastCoordinate());\r\n      label = formatLength(geometry);\r\n      line = geometry;\r\n    }\r\n  }\r\n  if (segments && line) {\r\n    let count = 0;\r\n    line.forEachSegment(function (a, b) {\r\n      let segment = new ol.geom.LineString([a, b]);\r\n      let label = formatLength(segment);\r\n      if (segmentStyles.length - 1 < count) {\r\n        segmentStyles.push(segmentStyle.clone());\r\n      }\r\n      let segmentPoint = new ol.geom.Point(segment.getCoordinateAt(0.5));\r\n      segmentStyles[count].setGeometry(segmentPoint);\r\n      segmentStyles[count].getText().setText(label);\r\n      styles.push(segmentStyles[count]);\r\n      count++;\r\n    });\r\n  }\r\n  if (label) {\r\n    labelStyle.setGeometry(point);\r\n    labelStyle.getText().setText(label);\r\n    styles.push(labelStyle);\r\n  }\r\n  if (\r\n    tip &&\r\n    type === 'Point' &&\r\n    !modify.getOverlay().getSource().getFeatures().length\r\n  ) {\r\n    tipPoint = geometry;\r\n    tipStyle.getText().setText(tip);\r\n    styles.push(tipStyle);\r\n  }\r\n  return styles;\r\n}"],"names":[],"version":3,"file":"index.914b02da.js.map","sourceRoot":"/__parcel_source_root/"}